module MVola
  class Client
    type token_data = Token
      | { access_token: String, token_type: String, expires_at: DateTime, scope: String }
      | { access_token: String, token_type: String, expires_in: String, scope: String }

    include Request

    SANDBOX_URL: String
    PRODUCTION_URL: String

    @consumer_key: String
    @consumer_secret: String
    @sandbox: bool
    @mutex: Mutex
    @token: String?

    attr_reader consumer_key: String
    attr_reader consumer_secret: String
    attr_reader sandbox: bool
    alias sandbox? sandbox

    def initialize: (consumer_key: String, consumer_secret: String, ?sandbox: bool, ?token: token_data?) -> void

    def token: () -> Token

    def token!: () -> Token

    private

    # This method is used to determine the base URL for the API requests.
    def base_url: () -> String

    def build_token_from: (token_data) -> Token

    def headers: () -> Hash[String, String]

    def fetch_token: () -> Hash[Symbol, String]
  end
end
